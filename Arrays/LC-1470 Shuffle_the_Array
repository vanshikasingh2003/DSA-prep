Question : https://leetcode.com/problems/shuffle-the-array/description/
Solution : 
Approach 1  : Time Complexity = O(n) Space Complexity = O(n)
class Solution {
    public int[] shuffle(int[] nums, int n) {
        int[] ans=new int[nums.length];
        int x=0;
        int y=n;
        for(int i=0;i<nums.length;i++){
            if(i%2 == 0){
                ans[i]=nums[x];
                x++;
            }
            else{
                ans[i]=nums[y];
                y++;
            }
        }
        return ans;
    }
}

Appraoch 2 :  Time Complexity = O(n) Space Complexity = O(n)
class Solution {
    public int[] shuffle(int[] nums, int n) {
        int[] ans=new int[2*n];
        for(int i=0;i<n;i++){
            ans[2*i]=nums[i];
            ans[2*i + 1]=nums[i+n];
        }
        return ans;
    }
}
