Question : https://leetcode.com/problems/plus-one/
Solution : 
Approach 1 : Time : O(n) Space : O(n)
class Solution {
    public int[] plusOne(int[] digits) {
        StringBuilder sb = new StringBuilder();
        for (int num : digits) {
            sb.append(num);
        }
        java.math.BigInteger number = new java.math.BigInteger(sb.toString());
        number = number.add(java.math.BigInteger.ONE);
        String s = number.toString();
        int[] result = new int[s.length()];
        for (int i = 0; i < s.length(); i++) {
            result[i] = s.charAt(i) - '0';
        }
        return result;
    }
}

Approach 2 : Time : O(n) Space : O(1)
class Solution {
    public int[] plusOne(int[] digits) {
        for (int i = digits.length - 1; i >= 0; i--) {
            if (digits[i] < 9) {
                digits[i]++;
                return digits;
            }
            digits[i] = 0;
        }

        int[] result = new int[digits.length + 1];
        result[0] = 1;
        return result;
    }
}



Things I learnt : 
To convert an array into a String :

Approach 1 :
int[] arr = {1, 2, 3};
StringBuilder sb = new StringBuilder();
for (int num : arr) {
    sb.append(num);
}
String result = sb.toString();
System.out.println(result); // "123"


Approach 2 :
int[] arr = {1, 2, 3};
StringBuilder sb = new StringBuilder();
for (int num : arr) {
    sb.append(num);
}
int number = Integer.parseInt(sb.toString());
System.out.println(number); // 123

Approach 3 :
BigInteger is a class that represents integers of any size.
