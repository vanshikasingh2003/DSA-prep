Question : https://leetcode.com/problems/find-numbers-with-even-number-of-digits/description/
Solution : 
Time : O(n) Space : O(1)
class Solution {
    public int findNumbers(int[] nums) {
        int counter=0;
       for(int i=0;i<nums.length;i++){
        int digits = digitCounter(nums[i]);
        if(digits % 2 == 0){
            counter++;
        }
       }
       return counter; 
    }
    public int digitCounter(int n){
       int count=0;
       while(n>0){
           n=n/10;
           count++;
       }
       return count;
   }
}

Notes : 
This is the best possible complexity because each element will be visited atleast once. But some improvements that can be done are : 
public int digitCounter(int n) {
        if (n == 0) {
            return 1; // edge case: 0 has 1 digit
        }
        return (int) Math.log10(n) + 1;
    }

log10(n) means: “What power of 10 gives me n?”
Example:
log10(9) ≈ 0.95 → floor = 0 → digits = 0 + 1 = 1 
log10(99) ≈ 1.99 → floor = 1 → digits = 1 + 1 = 2
log10(999) ≈ 2.99 → floor = 2 → digits = 2 + 1 = 3
So the formula works because the integer part of log10(n) tells you how many times 10 fits into the number. Adding 1 gives you the digit count.
