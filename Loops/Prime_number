Question : Check if a number is prime or not.
Solutions:

Approach 1 : Time complexity : worst-case = O(n) Space : O(1)
public class MyClass {
  public static void main(String args[]) {
    int n = 6;
    boolean isPrime = true;
    if (n <= 1) {
        isPrime = false;
    } else {
        for (int i = 2; i <= n - 1; i++) {
            if (n % i == 0) {
                isPrime = false;
                break;
            }
        }
    }
    if (isPrime) {
        System.out.println("prime");
    } else {
        System.out.println("not prime");
    }
  }
}

Approach 2 : Time Complexity: O(√n) , Space Complexity: O(1)
public static boolean isPrime(int n) {
    if (n <= 1) return false;

    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) return false;
    }
    return true;
}

Approach 3 : Time: O(√n) (but ~2x faster because we skip even checks)
Space: O(1)
boolean isPrime(int n) {
    if (n <= 1) return false;
    if (n == 2) return true;       // 2 is prime
    if (n % 2 == 0) return false;  // eliminate even numbers
    for (int i = 3; i * i <= n; i += 2) { // only odd divisors
        if (n % i == 0) return false;
    }
    return true;
}

