Question : 
Given a string, count the frequency of each character (including spaces) and print them in descending order of frequency.
If two characters have the same frequency, print them in alphabetical order.

Solution : 
import java.util.*;

public class MyClass {
    public static void main(String[] args) {
        String sentence = "apple   ball";
        
        Map<Character, Integer> map = new HashMap<>();
        sentence = sentence.toLowerCase();

        for (char single : sentence.toCharArray()) {
            map.put(single, map.getOrDefault(single, 0) + 1);
        }

        System.out.println(map);

        List<Map.Entry<Character, Integer>> entryList = new ArrayList<>(map.entrySet());

        Collections.sort(entryList, (e1, e2) -> {
            int freqCompare = e2.getValue().compareTo(e1.getValue());
            if (freqCompare == 0) {
                return e1.getKey().compareTo(e2.getKey());
            }
            return freqCompare;
        });

        for (Map.Entry<Character, Integer> entry : entryList) {
            System.out.println(entry.getKey() + " -> " + entry.getValue());
        }
    }
}

To Be studied : 
1. sorting logic 
